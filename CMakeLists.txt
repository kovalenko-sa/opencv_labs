cmake_minimum_required(VERSION 3.0.0)
project(opencv_study VERSION 0.1.0)

include(CTest)
find_package(OpenCV REQUIRED)
include_directories( ${OpenCV_INCLUDE_DIRS})
enable_testing()

add_executable(main lab_1/main.cpp)
add_executable(tank lab_1/tank.cpp)
add_executable(blending lab_1/blending.cpp)
add_executable(lab_2 lab_2/lab_2.cpp)
add_executable(task_1 lab_3/task_1.cpp)
add_executable(task_2 lab_3/task_2.cpp)
add_executable(task_3 lab_3/task_3.cpp)
add_executable(task_4 lab_3/task_4.cpp)
add_executable(lab_5 lab_5/main.cpp)

add_executable(calibrate_camera_charuco calibrate_camera_charuco.cpp)
add_executable(create_board_charuco create_board_charuco.cpp)
add_executable(create_marker create_marker.cpp)
add_executable(detect_markers detect_markers.cpp)
add_executable(opencv_version opencv_version.cpp)


set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
target_link_libraries(main ${OpenCV_LIBS})
target_link_libraries(tank ${OpenCV_LIBS})
target_link_libraries(blending ${OpenCV_LIBS})
target_link_libraries(lab_2 ${OpenCV_LIBS})
target_link_libraries(task_1 ${OpenCV_LIBS})
target_link_libraries(task_2 ${OpenCV_LIBS})
target_link_libraries(task_3 ${OpenCV_LIBS})
target_link_libraries(task_4 ${OpenCV_LIBS})
target_link_libraries(lab_5 ${OpenCV_LIBS})

target_link_libraries(calibrate_camera_charuco ${OpenCV_LIBS})
target_link_libraries(create_board_charuco ${OpenCV_LIBS})
target_link_libraries(create_marker ${OpenCV_LIBS})
target_link_libraries(detect_markers ${OpenCV_LIBS})
target_link_libraries(opencv_version ${OpenCV_LIBS})